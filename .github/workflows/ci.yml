name: Build Linux x64

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.24'
  PROJECT_NAME: 'ora2pg-admin'

jobs:
  # æž„å»º Linux x64 äºŒè¿›åˆ¶åŒ…
  build-linux:
    name: Build Linux x64
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build Linux x64 binary
      env:
        GOOS: linux
        GOARCH: amd64
      run: |
        VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "v0.0.0-$(git rev-parse --short HEAD)")
        BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
        GIT_COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
        
        echo "Building version: $VERSION"
        echo "Build time: $BUILD_TIME"
        echo "Git commit: $GIT_COMMIT"
        
        go build -ldflags "-X main.Version=${VERSION} -X main.BuildTime=${BUILD_TIME} -X main.GitCommit=${GIT_COMMIT} -w -s" \
          -o ${{ env.PROJECT_NAME }}-linux-amd64 .

    - name: Create release info
      run: |
        echo "# Build Information" > build-info.txt
        echo "- **Version**: $(git describe --tags --always --dirty 2>/dev/null || echo "v0.0.0-$(git rev-parse --short HEAD)")" >> build-info.txt
        echo "- **Build Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> build-info.txt
        echo "- **Git Commit**: $(git rev-parse --short HEAD)" >> build-info.txt
        echo "- **Go Version**: $(go version)" >> build-info.txt
        echo "- **Platform**: linux/amd64" >> build-info.txt
        echo "" >> build-info.txt
        echo "## Binary Size" >> build-info.txt
        ls -lh ${{ env.PROJECT_NAME }}-linux-amd64 | awk '{print "- **Size**: " $5}' >> build-info.txt

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-linux-amd64
        path: |
          ${{ env.PROJECT_NAME }}-linux-amd64
          build-info.txt
        retention-days: 30

    - name: Display build summary
      run: |
        echo "ðŸŽ‰ Build completed successfully!"
        echo "ðŸ“¦ Binary: ${{ env.PROJECT_NAME }}-linux-amd64"
        echo "ðŸ“Š Build info:"
        cat build-info.txt
